// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Window404 should render correctly 1`] = `
<BannerAuth>
  <styled.div>
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": true,
            "lastClassName": "bOOYVo",
            "rules": Array [
              "
  width: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;

  margin-top: auto;
  margin-bottom: auto;  
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="sc-bdVaJa bOOYVo"
      >
        <styled.h2>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": true,
                  "lastClassName": "gEwmcO",
                  "rules": Array [
                    "
  color: #fff;
  text-align: center;
  letter-spacing: 0.4rem;
  line-height: 4.1rem;

  font-weight: 400;
  
",
                  ],
                },
                "displayName": "styled.h2",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": "h2",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <h2
              className="sc-bwzfXH gEwmcO"
            >
              Plan your activities, have fun and 
              <br />
               keep those grades up!
            </h2>
          </StyledComponent>
        </styled.h2>
        <styled.h2>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": true,
                  "lastClassName": "gEwmcO",
                  "rules": Array [
                    "
  color: #fff;
  text-align: center;
  letter-spacing: 0.4rem;
  line-height: 4.1rem;

  font-weight: 400;
  
",
                  ],
                },
                "displayName": "styled.h2",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": "h2",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <h2
              className="sc-bwzfXH gEwmcO"
            >
              Donâ€™t ever forget a single 
              <br />
               homework again!
            </h2>
          </StyledComponent>
        </styled.h2>
        <styled.div>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-htpNat",
                  "isStatic": true,
                  "lastClassName": "dWqFMi",
                  "rules": Array [
                    "
  margin: 7rem 0;
  position: relative;

  @media only screen and (max-width: ",
                    "85.375em",
                    ") {
    margin: 4rem 0;
  }

  display: flex;
  flex-direction: column;
  align-items: center;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-htpNat",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="sc-htpNat dWqFMi"
            >
              <Styled(Component)>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-ifAKCX",
                        "isStatic": true,
                        "lastClassName": "hPcISu",
                        "rules": Array [
                          "
  margin-bottom: -70px;
  margin-right: 10px;
  width: 53rem;

  @media only screen and (max-width: ",
                          "85.375em",
                          ") {
    width: 45rem;
  }

  & path {
    animation: ",
                          Keyframes {
                            "id": "sc-keyframes-bwXzVT",
                            "inject": [Function],
                            "name": "bwXzVT",
                            "rules": Array [
                              "@-webkit-keyframes bwXzVT{from{opacity:1;}to{opacity:0.5;}}",
                              "@keyframes bwXzVT{from{opacity:1;}to{opacity:0.5;}}",
                            ],
                            "toString": [Function],
                          },
                          " 1.5s ease-in-out infinite;
    animation-direction: alternate;
  }

  ",
                          "
      & path:nth-child(1) {
        animation-delay: -1s;        
      }
    
      & path:nth-child(2) {
        animation-delay: 0s;        
      }
    
      & path:nth-child(3) {
        animation-delay: 1s;        
      }
    
      & path:nth-child(4) {
        animation-delay: 2s;        
      }
    
      & path:nth-child(5) {
        animation-delay: 3s;        
      }
    
      & path:nth-child(6) {
        animation-delay: 4s;        
      }
    
      & path:nth-child(7) {
        animation-delay: 5s;        
      }
    
      & path:nth-child(8) {
        animation-delay: 6s;        
      }
    
      & path:nth-child(9) {
        animation-delay: 7s;        
      }
    
      & path:nth-child(10) {
        animation-delay: 8s;        
      }
    
      & path:nth-child(11) {
        animation-delay: 9s;        
      }
    
      & path:nth-child(12) {
        animation-delay: 10s;        
      }
    
      & path:nth-child(13) {
        animation-delay: 11s;        
      }
    
      & path:nth-child(14) {
        animation-delay: 12s;        
      }
    
      & path:nth-child(15) {
        animation-delay: 13s;        
      }
    
      & path:nth-child(16) {
        animation-delay: 14s;        
      }
    
      & path:nth-child(17) {
        animation-delay: 15s;        
      }
    
      & path:nth-child(18) {
        animation-delay: 16s;        
      }
    
      & path:nth-child(19) {
        animation-delay: 17s;        
      }
    
      & path:nth-child(20) {
        animation-delay: 18s;        
      }
    ",
                          ";
",
                        ],
                      },
                      "displayName": "Styled(Component)",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-ifAKCX",
                      "target": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <ForwardRef(SvgStars)
                    className="sc-ifAKCX hPcISu"
                  >
                    <svg
                      className="sc-ifAKCX hPcISu"
                    >
                      stars.svg
                    </svg>
                  </ForwardRef(SvgStars)>
                </StyledComponent>
              </Styled(Component)>
              <Styled(Component)>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-bxivhb",
                        "isStatic": true,
                        "lastClassName": "bfZLDR",
                        "rules": Array [
                          "
  width: 40rem;

  @media only screen and (max-width: ",
                          "85.375em",
                          ") {
    width: 33rem;
  }
",
                        ],
                      },
                      "displayName": "Styled(Component)",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-bxivhb",
                      "target": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <ForwardRef(SvgLogoSharp)
                    className="sc-bxivhb bfZLDR"
                  >
                    <svg
                      className="sc-bxivhb bfZLDR"
                    >
                      logo_sharp.svg
                    </svg>
                  </ForwardRef(SvgLogoSharp)>
                </StyledComponent>
              </Styled(Component)>
              <Styled(Component)>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-EHOje",
                        "isStatic": true,
                        "lastClassName": "gDYQPM",
                        "rules": Array [
                          "
  position: absolute;
  bottom: 1rem;
  right: -2rem;

  width: 16rem;
  height: 12rem;
  @media only screen and (max-width: ",
                          "85.375em",
                          ") {
    bottom: 2rem;
  }  
",
                        ],
                      },
                      "displayName": "Styled(Component)",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-EHOje",
                      "target": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <ForwardRef(SvgCheck)
                    className="sc-EHOje gDYQPM"
                  >
                    <svg
                      className="sc-EHOje gDYQPM"
                    >
                      check.svg
                    </svg>
                  </ForwardRef(SvgCheck)>
                </StyledComponent>
              </Styled(Component)>
            </div>
          </StyledComponent>
        </styled.div>
        <styled.h2>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": true,
                  "lastClassName": "gEwmcO",
                  "rules": Array [
                    "
  color: #fff;
  text-align: center;
  letter-spacing: 0.4rem;
  line-height: 4.1rem;

  font-weight: 400;
  
",
                  ],
                },
                "displayName": "styled.h2",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": "h2",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <h2
              className="sc-bwzfXH gEwmcO"
            >
              Continue and get things done!
            </h2>
          </StyledComponent>
        </styled.h2>
      </div>
    </StyledComponent>
  </styled.div>
</BannerAuth>
`;
